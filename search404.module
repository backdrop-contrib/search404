<?php
/* $Id$ */

/**
 * Implementation of hook_menu().
 */
function search404_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array('path' => 'search404',
      'title' => t('Page not found'), 'access' => true,
      'callback' => 'search404_page', 'type' => MENU_CALLBACK);
    $items[] = array(
      'path' => 'admin/settings/search404',
      'title' => t('Search 404 settings'),
      'description' => t('Administer search 404.'),
      'callback' => 'drupal_get_form',
      'callback argument' => array('search404_settings'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    );
  }

  return $items;
}

/**
 * Main search function.
 *
 * Updated: Improved by using (stealing) code by Steven
 * - http://drupal.org/node/12668
 */
function search404_page() {
  $output = t('<p>The page you requested was not found.</p>');

  if (user_access('search content')) {
    $ignore = explode(' ', variable_get('search404_ignore', 'htm html php'));
    
    $q = $_REQUEST['destination'];
    $keys = split('[^A-Za-z0-9]+', $q);
    $keys = array_diff($keys, $ignore);
    
    $modifier = variable_get('search404_use_or', false) ? ' OR ' : ' ';
    $keys = trim(implode($modifier, $keys));
    if ($keys) {
      // Get search results
      $results = module_invoke('node', 'search', 'search', $keys);

      if (isset($results) && is_array($results) && count($results)) {
        // First, check to see if there is exactly 1 result
        if (variable_get('search404_jump', false) && count($results) == 1) {
          drupal_set_message(t('The page you requested does not exist. A search for &quot;<i>%keys</i>&quot; resulted in this page.', array('%keys' => $keys)));
          // overwrite $_REQUEST['destination'] because it is set by drupal_not_found()
          $_REQUEST['destination'] = 'node/' . $results[0]['node']->nid;
          drupal_goto();
        }

        // Otherwise, redirect to a search page
        drupal_set_message(t('The page you requested does not exist. For your convenience, a search was performed using the query &quot;<i>%keys</i>&quot;.', array('%keys' => $keys)));
        // overwrite $_REQUEST['destination'] because it is set by drupal_not_found()
        $_REQUEST['destination'] = 'search/node/' . $keys;
        drupal_goto();
      }
      // If there are not results, tell the user
      else {
        drupal_set_message(t('A search was performed for &quot;<i>%keys</i>&quot;, but nothing was found. Please use the form below to search all of our site content.', array('%keys' => $keys)));
        // Redirect to the search page to allow the user to perform a different search.
        $_REQUEST['destination'] = 'search';
        drupal_goto();
      }
    }
  }

  return $output;
}

/**
 * Settings form
 */
function search404_settings() {
  $form['search404_jump'] = array(
    '#type' => 'checkbox',
    '#title' => t('Jump directly to the search result when there is only one result.'),
    '#default_value' => variable_get('search404_jump', false),
  );

  $form['search404_use_or'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use OR between keywords when searching.'),
    '#default_value' => variable_get('search404_use_or', false),
  );
  
  $form['search404_ignore'] = array(
    '#type' => 'textfield',
    '#title' => t('Words to ignore'),
    '#description' => t('Separate words with a space, e.g.: "htm html php".'),
    '#default_value' => variable_get('search404_ignore', 'htm html php'),
  );

   return system_settings_form($form);
}