<?php
/* $Id$ */

/**
 * Implementation of hook_help().
 */
function search404_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t('Shows a 404-page with the results of a search for the keywords in the URI.');
  }
}

/**
 * Implementation of hook_menu().
 */
function search404_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array('path' => 'search404', 
      'title' => t('Page not found'), 'access' => true, 
      'callback' => 'search404_page', 'type' => MENU_CALLBACK);
  }

  return $items;
}

/**
 * Main search function.
 *
 * Updated: Improved by using (stealing) code by Steven
 * - http://drupal.org/node/12668
 */
function search404_page() {
  drupal_set_title(t('Page not found'));

  $output = t('<p>The page you requested was not found.</p>');

  if (user_access('search content')) {
    $ignore = array('dump', 'zip', 'avi', 'a');

    $uri = urldecode(request_uri());
    $keys = split('[^A-Za-z]+', $uri);
    $keys = array_diff($keys, $ignore);
    $keys = trim(implode(' ', $keys));
    if ($keys) {
      $results = search_data($keys);
      if ($results) {
        $output .= t('<p>For your convenience, a search was performed using the query &quot;<i>%keys</i>&quot;:</p>', array('%keys' => $keys));
        $output .= $results;
      } else {
        $output .= t('<p>A search was performed for &quot;<i>%keys</i>&quot;, but nothing was found.</p>', array('%keys' => $keys));
      }
    }
  }

  return $output;
}

/**
 * Implementation of hook_settings().
 */
function search404_settings() {
  $form['search404_enable'] = array('#type' => 'checkbox',
    '#title' => t('Set Search 404 to be your default 404 page.'),
    '#default_value' => search404_is_enabled);
    
  return $form;
}

function search404_settings_form_submit($form_id, $form_values) {
  if ($form_values['search404_enable'] && !search404_is_enabled()) {
    variable_set('previous_site_404', variable_get('site_404', ''));
    variable_set('site_404', 'search404');
    drupal_set_message(t('Search 404 is now enabled.'));
  } elseif (!$form_values['search404_enable'] && search404_is_enabled()) {
    variable_set('site_404', variable_get('previous_site_404', ''));
    drupal_set_message(t('Search 404 is now disabled.'));
  }
}

function search404_is_enabled() {
  return (variable_get('site_404', '') == 'search404');
}

?>